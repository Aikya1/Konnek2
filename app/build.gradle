buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
repositories {
    maven { url 'https://dl.bintray.com/drummer-aidan/maven' }
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven {
        url 'https://maven.google.com'
    }
}
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId "com.aikya.konnek2"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        multiDexEnabled = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

    }
    signingConfigs {
        /* debug {
             keyAlias 'MyKonnek2Key'
             keyPassword 'aikya@123'
             storeFile file('/home/rajeev/AndroidKeystores/Konnek2NewKey.jks')
             storePassword 'aikya@123'
         }*/
        /*debug {
            storeFile file("/home/rajeev/AndroidKeystores/Konnek2.jks")
            storePassword "aikya@123"
            keyAlias "key0"
            keyPassword "aikya@123"
        }*/
        release {
            keyAlias 'Konnek2Release'
            keyPassword 'aikya@123'
            storeFile file('/home/rajeev/AndroidKeystores/Konnek2ReleaseKey.jks')
            storePassword 'aikya@123'
        }
        /* debug {
            keyAlias 'MyKonnek2Key'
            keyPassword 'aikya@123'
            storeFile file('/home/rajeev/AndroidKeystores/Konnek2NewKey.jks')
            storePassword 'aikya@123'
        }*/
    }
    buildTypes {
        release {
            minifyEnabled false
            debuggable false
            ext.enableCrashlytics = true
            signingConfig signingConfigs.release
            buildConfigField "String", "APP_ID", prodAppID
            buildConfigField "String", "AUTH_KEY", prodAuthKey
            buildConfigField "String", "AUTH_SECRET", prodAuthSecret
            buildConfigField "String", "ACCOUNT_KEY", prodAccountKey
            buildConfigField "String", "TWITTER_KEY", prodTwitterDigitsConsumerKey
            buildConfigField "String", "TWITTER_SECRET", prodTwitterDigitsConsumerSecret
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", devFirebaseAuthProjectId
            resValue "string", "twitterDigitsApiKey", prodTwittedDigitsApiKey
            resValue "string", "facebookAppId", prodFacebookAppID
            resValue "string", "sender_id", prodPushRegistrationAppID
        }
        debug {
            debuggable true
            versionNameSuffix ' (debug)'
            buildConfigField "String", "APP_ID", prodAppID
            buildConfigField "String", "AUTH_KEY", prodAuthKey
            buildConfigField "String", "AUTH_SECRET", prodAuthSecret
            buildConfigField "String", "ACCOUNT_KEY", devAccountKey
            buildConfigField "String", "TWITTER_KEY", devTwitterDigitsConsumerKey
            buildConfigField "String", "TWITTER_SECRET", devTwitterDigitsConsumerSecret
            buildConfigField "String", "FIREBASE_AUTH_PROJECT_ID", prodFirebaseAuthProjectId
            resValue "string", "twitterDigitsApiKey", devTwittedDigitsApiKey
            resValue "string", "facebookAppId", devFacebookAppID
            resValue "string", "sender_id", devPushRegistrationAppID
//            signingConfig signingConfigs.config
        }
    }
    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libassmidi.so'
        pickFirst 'lib/x86/libassmidi.so'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    lintOptions {
        abortOnError false
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}.apk"
        }
    }
    productFlavors {
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}




dependencies {
    implementation 'com.android.support:support-v4:26.1.0'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'org.greenrobot:eventbus:3.1.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha9'
    testCompile 'junit:junit:4.12'

    //    compile 'com.android.support:support-v4:26.1.0'
    compile "com.android.support:support-v4:${rootProject.supportV4Version}"
    compile 'com.hbb20:ccp:2.1.4'
    // QuickBlox Lib
    compile "com.android.support:multidex:${rootProject.multiDexVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.supportVersion}"
    compile "com.android.support:design:${rootProject.supportVersion}"
    compile "com.google.android.gms:play-services-gcm:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-auth:${rootProject.googlePlayServicesVersion}"
    compile "com.google.firebase:firebase-messaging:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-maps:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-location:${rootProject.googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-analytics:${rootProject.googlePlayServicesVersion}"
    compile "com.firebase:firebase-jobdispatcher-with-gcm-dep:${rootProject.firebaseDispatcherVersion}"
    compile "com.google.firebase:firebase-auth:${rootProject.firebaseAuthVersion}"
    compile "com.firebaseui:firebase-ui-auth:${rootProject.firebaseUiAuthVersion}"
    compile 'com.google.firebase:firebase-core:12.0.0'
    compile "com.nostra13.universalimageloader:universal-image-loader:${rootProject.universalImageLoaderVersion}"
    compile "com.jakewharton:butterknife:${rootProject.butterknifeVersion}"
    debugCompile 'com.amitshekhar.android:debug-db:1.0.2'
    compile "com.afollestad.material-dialogs:core:${rootProject.materialDialogsVersion}"
    compile "com.github.orangegangsters:swipy:${rootProject.swipyRecyclerviewVersion}@aar"
    compile "com.timehop.stickyheadersrecyclerview:library:${rootProject.stickylistheadersRecyclerViewVersion}@aar"
    compile "com.rockerhieu.emojicon:library:${rootProject.emojiconVersion}"
    compile "com.soundcloud.android:android-crop:${rootProject.cropVersion}@aar"
    compile('com.crashlytics.sdk.android:crashlytics:2.6.2@aar') {
        transitive = true;
    }
    compile 'com.flurry.android:analytics:6.2.0'
    compile project(':av')
}

/*def changeApkFileName(variant) {
    variant.outputs.each { output ->
        def file = output.outputFile
        def newName = 'QMUN_Android_v.' + rootProject.versionName + '_c.' + rootProject.versionCode + '-' + variant.buildType.name + '.apk'
        output.outputFile = new File(file.parent, newName)
    }
}*/

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '26.0.2'
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
